name: CI-CD-dev
on: 
  push:  
    branches:  
      - dev
    
permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs: 

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code  
        uses: actions/checkout@v3
      - name: Use Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '18.12.1'
      - name: Install dependencies  
        run: npm install
      - name: Test app  
        run: npm run test
      - name: Cache coverage
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./coverage/lcov.info
          key: code-coverage
          
  analysis_sonarcloud:
    needs: test
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v2
        with:
          path: ./coverage
          key: code-coverage
      - name: Analyze with SonarCloud
        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          args:
            -Dsonar.projectKey=SylvainJanet_personal-website-angular
            -Dsonar.organization=sylvainjanet
            
  check_analysis_sonarcloud:
    needs: analysis_sonarcloud
    name: Check Quality Gate SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Make request
      id: httpRequest
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://sonarcloud.io/api/qualitygates/project_status?projectKey=SylvainJanet_personal-website-angular&branch=dev'
        method: 'GET'
    - name: Show Response
      run: |
        echo ${{ steps.httpRequest.outputs.response }}
        
    - name: Check
      if: ${{ fromJson(steps.httpRequest.outputs.response).projectStatus.status != 'OK' }} 
      uses: actions/github-script@v3
      with:
        script: |
            core.setFailed('Quality gate failed')
          
  analyse_QL:
    name: Analyze CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
  


  build:  
    needs: [analyse_QL, check_analysis_sonarcloud]
    if: always()
    runs-on: ubuntu-latest  
    steps:    
      - name: Checkout source code  
        uses: actions/checkout@v3
      - name: Use Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '18.12.1'
      - name: Install dependencies  
        run: npm install
      - name: Build app  
        run: npm run build:staging
      - name: Inject slug/short variables  
        uses: rlespinasse/github-slug-action@v4
      - name: Upload artifact  
        uses: actions/upload-artifact@v3  
        with:  
          name: personal-website-angular-${{ env.GITHUB_REF_SLUG }}-${{ github.run_id }}-${{ github.run_number }}  
          path: ./dist/personal-website-angular
          
  deploy:  
    needs : build
    if: always()
    runs-on: ubuntu-latest  
  
    steps:
      - name: Inject slug/short variables  
        uses: rlespinasse/github-slug-action@v4 
      - name: Download artifact  
        uses: actions/download-artifact@v3  
        with:  
          name: personal-website-angular-${{ env.GITHUB_REF_SLUG }}-${{ github.run_id }}-${{ github.run_number }}  
          path: './build'
      - name: üìÇ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME_DEV }}
          password: ${{ secrets.FTP_PASSWORD_DEV }}
          local-dir: './build/'
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
